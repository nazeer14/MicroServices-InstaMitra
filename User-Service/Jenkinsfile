pipeline {
    agent any

    environment {
        REGISTRY = "docker.io/nazeer14/user-service"   // Your DockerHub registry
        SERVICE_NAME = "${env.JOB_NAME}"              // Jenkins Job name = service name
        IMAGE_TAG = "${env.BUILD_NUMBER}"             // Build number as tag
        AWS_REGION = "eu-north-1"                     // Change if your cluster is in another region
        EKS_CLUSTER = "interesting-jazz-sheepdog"                    // Your EKS cluster name
    }

    tools {
        jdk "jdk17"
        maven "maven3"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/nazeer14/MicroServices-InstaMitra.git',
                        credentialsId: 'github-credentials'
                    ]]
                ])
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${REGISTRY}:${IMAGE_TAG}")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        dockerImage.push()
                        dockerImage.push("latest")
                    }
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                withAWS(credentials: 'aws-credentials', region: "${AWS_REGION}") {
                    sh """
                        aws eks update-kubeconfig --name ${EKS_CLUSTER} --region ${AWS_REGION}
                        kubectl apply -f k8s/deployment.yaml
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Build & Deploy successful for ${SERVICE_NAME}"
        }
        failure {
            echo "❌ Build failed for ${SERVICE_NAME}"
        }
    }
}
