server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

spring:
  application:
    name: api-gateway

  redis:
    host: redis-service
    port: 6379


  security:
    user:
      name: admin
      password: admin123

  boot:
    admin:
      client:
        url: http://admin-server-app:8080
        instance:
          prefer-ip: true
          metadata:
            user.name: admin
            user.password: admin123

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      routes:
        - id: admin-service
          uri: lb://admin-service
          predicates:
            - Path=/admin-service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100

        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/user-service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100

        - id: provider-service
          uri: lb://provider-service
          predicates:
            - Path=/provider-service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100

        - id: service-catalog-service
          uri: lb://service-catalog-service
          predicates:
            - Path=/service-catalog-service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100

        - id: orders-service
          uri: lb://orders-service
          predicates:
            - Path=/orders-service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100

        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/payment-service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 30
                redis-rate-limiter.burstCapacity: 100

      default-filters:
        - AddResponseHeader=X-Gateway, Passed

      httpclient:
        wiretap: true
        connect-timeout: 5000
        response-timeout: 15s

      forwarded:
        enabled: true

      filter:
        remove-hop-by-hop:
          enabled: false

      forwarded-headers-strategy: native

  codec:
    max-in-memory-size: 10MB

eureka:
  client:
    service-url:
      defaultZone: http://service-registry:8761/eureka/
    instance:
      prefer-ip-address: true
